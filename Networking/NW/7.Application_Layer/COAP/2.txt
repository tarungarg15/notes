Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2017-10-21T14:34:27+05:30

====== 2 ======
Created Saturday 21 October 2017

====== Message Transmission ======

* CoAP messages are exchanged asynchronously between CoAP endpoints.
* They are used to transport CoAP requests and responses
* As CoAP is bound to unreliable transports such as UDP, CoAP messages may arrive out of order, appear duplicated, or go missing without notice.  
* For this reason, CoAP implements a lightweight reliability mechanism, without trying to re-create the full feature set of a transport like TCP.  

**It has the following features:**
   o  Simple stop-and-wait retransmission reliability with exponential  back-off for Confirmable messages.
   o  Duplicate detection for both Confirmable and Non-confirmable messages.


== 1.	Messages and Endpoints ==
	* A CoAP endpoint is the source or destination of a CoAP message.  
	* Specific definition of an endpoint depends on the transport being  used for CoAP.  
	* Endpoint is identified depending on the security mode used 
	* With no security, the endpoint is solely identified by an IP address and a UDP port number.  
	* With other security modes, the  endpoint is identified as defined by the security mode.
	* There are different types of messages.  The type of a message is   specified by the Type field of the CoAP Header.
2. 

== Messages Transmitted Reliably ==

	* If server is not able to send response here then time out occurs & client will stop sending the message.
 
3. 
== Messages Transmitted without Reliability ==

	* A Non- confirmable message always carries either a request or response and   MUST NOT be Empty. 
	* A Non-confirmable message MUST NOT be acknowledged by the recipient.  
	* A recipient MUST reject the message   if it lacks context to process the message properly, including the case where the message is Empty, uses a code with a reserved class  (1, 6, or 7), or has a message format error.  
	* Rejecting a Non- confirmable message MAY involve sending a matching Reset message, and apart from the Reset message the rejected message MUST be silently ignored.
4. 

== Message Correlation ==

	* An Acknowledgement or Reset message is related to a Confirmable message or Non-confirmable message by means of a Message ID along with additional address information of the corresponding endpoint.
	* The Message ID is a 16-bit unsigned integer that is generated by the sender of a Confirmable or Non-confirmable message and included in    the CoAP header.  
	* The Message ID MUST be echoed in the Acknowledgement or Reset message by the recipient.

5. 
== Message Deduplication ==

* A recipient might receive the same Confirmable message (as indicated   by the Message ID and source endpoint) multiple times within the EXCHANGE_LIFETIME 

**For example:-**
	* when its Acknowledgement went missing or didn't reach the original sender before the first timeout.  
	* The recipient SHOULD acknowledge each  duplicate copy of a Confirmable message using the same  Acknowledgement or Reset message 
	* But SHOULD process any request or  response in the message only once.  
	* This rule MAY be relaxed in case  the Confirmable message transports a request


== 6. Message Size ==
	* it beneficial to keep CoAP messages small enough to fit into their link-layer packets 
	* Messages   larger than an IP packet result in undesirable packet fragmentation.
	* A CoAP message, appropriately encapsulated, SHOULD fit within a single IP packet 
	* Good upper bounds are 1152 bytes for the message size and 1024 bytes for the payload size.

7. 
== Transmisison parameteres ==


{{./screenshot_2017-10-21-145700.png}}

