Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2017-10-21T14:01:35+05:30

====== 1 ======
Created Saturday 21 October 2017

====== Message Format ======

* CoAP is based on the exchange of compact messages that, by default, are transported over UDP
* CoAP may also be used over Datagram  Transport Layer Security (DTLS) 
* It could also beused over other transports such as SMS, TCP, or SCTP.
* CoAP messages are encoded in a simple binary format.  

		{{./screenshot_2017-10-21-142406.png}}
		
* The message format starts with a fixed-size 4-byte header.  
* This is followed by a variable-length Token value, which can be between 0 and 8 bytes long.

**The fields in the header are defined as follows:**

**Version (Ver):**  
	* 2-bit unsigned integer.  
	* Indicates the CoAP version number.

 **Type (T):**  
	* 2-bit unsigned integer.  
	* Indicates if this message is of  type
		* Confirmable (0)
		* Non-confirmable (1)
		* Acknowledgement (2), 
		* Reset (3).  

**Token Length (TKL):**  
	* 4-bit unsigned integer.  
	* Indicates the length of the variable-length Token field (0-8 bytes).  
	* Lengths 9-15 are reserved
	* MUST NOT be sent, and MUST be processed as a message format error.

**Code:**  
	* 8-bit unsigned integer, split into a 3-bit class (most significant bits) and a 5-bit detail (least significant bits),
	* Documented as "c.dd" 
		* where "c" is a digit from 0 to 7 for the3-bit subfield
		* "dd" are two digits from 00 to 31 for the 5-bit subfield.  
		* The class can indicate a request (0), a success response (2), a client error response (4), or a server error response (5). 
		* Code 0.00 indicates an Empty message.  
		* In case of a  request, the Code field indicates the Request Method; 
		* In case of a response, a Response Code.  

**Message ID:**  
	* 16-bit unsigned integer in network byte order. 
	* Used to detect message duplication and to match messages of 
		* type Acknowledgement/Reset to messages of type Confirmable/Non-confirmable.  
		* The rules for generating a Message ID and matching messages are defined in Section 4.

				{{./screenshot_2018-02-06-224126.png}}



**Token :-** 
	* The header is followed by the Token value, which may be 0 to 8 bytes, as given by the Token Length field. 
	* The Token value is used to correlate requests and responses.  

**Options :-**
	* Header and Token are followed by zero or more Options
	* An Option can be followed by the end of the message, by another Option, or by the **Payload Marker and the payload.**
	* **CoAP** defines a number of options that can be included in a message.
	* Each option instance in a message specifies the Option Number of the  defined CoAP option, the length of the Option Value, and the Option Value itself.


{{./screenshot_2018-02-06-231043.png}}{{./screenshot_2018-02-06-231106.png}}

{{./screenshot_2018-01-20-131415.png}}{{./screenshot_2018-02-06-231246.png}}



   o  the Uri-Host Option specifies the Internet host of the resource being requested,

   o  the Uri-Port Option specifies the transport-layer port number of the resource,

   o  each Uri-Path Option specifies one segment of the absolute path to the resource, and

   o  each Uri-Query Option specifies one argument parameterizing the resource.



