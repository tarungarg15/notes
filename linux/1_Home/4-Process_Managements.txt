Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2017-03-30T23:53:39+05:30

====== 4-Process Managements ======
Created Thursday 30 March 2017

== Process Scheduling :- ==
	[ ] Kernel susbsytem that puts process into work.
	[ ] The process scheduler (or simply the scheduler) divides the finite resource of processor time between the runnable processes on a system

== Multitasking :- ==
	[ ] A multitasking operating system is one that can simultaneously interleave execution of more than one process.
	[ ] On single processor machines, this gives the illusion of multiple processes running concurrently.
	[ ] On multiprocessor machines, this enables processes to actually run concurrently, in parallel, on different processors.

**Multitasking operating systems come in two flavors:**
	1. Preemptive multitasking
	2. Cooperative multitasking

== Preemptive multitasking ==
In preemptive multitasking, the scheduler decides when a process is to cease running and a new process is to begin running.

	[ ] Preemption: the act of involuntarily suspending a running process.
	[ ] Timeslice of a process: the time the process runs before it is preempted is usually predetermined.
	[ ] Managing the timeslice enables the scheduler to make global scheduling decisions for the system and prevents any one process from monopolizing the processor.
	[ ] On many modern operating systems, the timeslice is dynamically calculated as a function of process behavior and configurable system policy.
	[ ] Linux's unique "fair" scheduler does not employ timeslices per se, to interesting effect


== Cooperative multitasking ==
In cooperative multitasking, a process does not stop running until it voluntarily decides to do so. The act of a process voluntarily suspending itself is called yielding, but the operating system cannot enforce this.

== I/O-Bound Versus : ==
	1. An I/O-bound process spends much of its time submitting and waiting on I/O requests. Such a process is runnable for only short durations, because it eventually blocks waiting on more I/O.
	2. "I/O" means any type of blockable resource, such as keyboard input or network I/O, and not just disk I/O.

== Processor-Bound Processes : ==
	1. Processor-bound processes spend much of their time executing code. Thet tend to run until they are preempted because they do not block on I/O requests very often.
	2. Examples of processor-bound processes include: a program executing an infinite loop, ssh-keygen, MATLAB.

== Process Priority :- ==
The priority-based scheduling is a common type of scheduling algorithm, which isn't exactly implemented on Linux. It means that processes with a higher priority run before those with a lower priority, whereas processes with the same priority are scheduled round-robin

The Linux kernel implements two separate priority ranges:

== nice value :- ==
	1. (a number from –20 to +19 with a default of 0) is the standard priority range used in all Unix systems:
	2. Processes with a lower nice value (higher priority) receive a larger proportion of the system's processor, and vice versa.
	3. In Linux, the nice value is a control over the proportion of timeslice. ]
	4. In other Unix-based systems, such as Mac OS X, the nice value is a control over the absolute timeslice allotted to a process;
	5. The ps -el command lists processes with their nice values.
 

== Real-time priority :- ==
	1. (configurable values that by default range from 0 to 99)
	2. Higher real-time priority values correspond to a greater priority.
	3. All real-time processes are at a higher priority than normal processes.
	4. Linux implements real-time priorities in accordance with the relevant Unix standards, specifically POSIX.1b.
	5. The ps -eo state,uid,pid,ppid,rtprio,time,comm command lists processes and their real-time priority.
	6. A value of “-” means the process is not real-time.

{{./screenshot_2017-03-31-001937.png}}


== Question: What are the 4 things that process follows ?. ==
Answer:	
	1. PID
	2. TTY
	3. TIME
	4. CMD

== Question: What ps command do ?. ==
Answer: Process status command to list of process which are created by current terminal

ps -ef 	:-	will give complete details of all running process.
				UID
				PID
				PPID
				cpu usage
				Start time of process
				TTY
				CMD which has launched the process.


== Q: What are the types of process ?. ==
Answer : 

Interactive : Needs user interaction
	1. Foreground : where process blocks wait fro user input
	2. Background : Runs in background not taking any user input use & at the end of process to run from terminal.
Batch Process : - 
	1. Process which are queued in & executed by one by one in FIFO. 
	2. Not associated to any terminal instead given to system to run
Daemon Process :- 
	1. Runs in Background & not associated to any terminal.
	2. e.g Mail serverJust have to listen relevant ports & respond with protocol routines on receiving packages.
Zombie Process :- 
	1. When  Process terminates then there is aproper exit & clean up routine to be done by developer of program.


== Q: Zombie Process example ?. ==
{{./screenshot_2017-05-28-064503.png}}




