Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2017-03-31T14:59:03+05:30

====== 8-IPC-Shared-Memory ======
Created Friday 31 March 2017

Shared-Memory :- 
	* It has overcom the disadvantages of pipes.
	* Two un-related process to access same logical memory
	* Shared memory allows one or more processes to communicate via memory that appears in all of their virtual address spaces. 
	* The pages of the virtual memory is referenced by page table entries in each of the sharing processes' page tables. 
	* It does not have to be at the same address in all of the processes' virtual memory. 
	* As with all System V IPC objects, access to shared memory areas is controlled via keys and access rights checking. 
	* Once the memory is being shared, there are no checks on how the processes use it. 
	* They must rely on other mechanisms, for example System V semaphores, to synchronize access to the memory.

	[ ] A process creates a shared memory segment using **shmget()|**
	[ ] Other processes with proper permission can perform various control functions on the shared memory segment using **shmctl()**
	[ ] Once created, a shared segment can be attached to a process address space using **shmat().** 
	[ ] It can be detached using **shmdt()** (see shmop()). The attaching process must have the appropriate permissions for shmat(). 
	[ ] Once attached, the process can read or write to the segment, as allowed by the permission requested in the attach operation. 
	[ ] A shared segment can be attached multiple times by the same process. 
	[ ] A shared memory segment is described by a control structure with a unique ID that points to an area of physical memory. 
	[ ] The identifier of the segment is called the shmid.

Write on shared memory
{{./screenshot_2017-03-31-152313.png}}

Read from shared memeory : - 

{{./screenshot_2017-03-31-152423.png}}

Basically shared memory is an form of IPC.The shared region is created in /dev/shm which is created in memory only(RAM) and it requires no disk operations, hence it is a faster method of IPC.Although IPC can be done using disk file and then using mmap too, but it would be comparetively slow.


{{./screenshot_2017-03-31-154743.png}}

The mmap subroutine provides a unique object address for each process that maps to an object. The software accomplishes this by providing each process with a unique virtual address, known as an alias. The shmat subroutine allows processes to share the addresses of the mapped objects.

http://pubs.opengroup.org/onlinepubs/9699919799/functions/mmap.html#

http://pubs.opengroup.org/onlinepubs/9699919799/functions/shm_open.html
